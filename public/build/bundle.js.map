{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/firebase.js","../../src/EventManager.js","../../src/utility/Button.svelte","../../src/utility/Input.svelte","../../src/Pages/LoginPage.svelte","../../src/constants.js","../../src/api.js","../../src/utility/Popup.svelte","../../src/Sidebar.svelte","../../src/utility/Icon.svelte","../../src/Component.svelte","../../src/Container.svelte","../../src/Pages/AppPage.svelte","../../src/utility/LoadSpinner.svelte","../../src/utility/ProcessSpinner.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyCZ2HXCcsbMsIHMxAdqiStOOx7AA5Xhkms\",\r\n  authDomain: \"tick-todo-app.firebaseapp.com\",\r\n  projectId: \"tick-todo-app\",\r\n  storageBucket: \"tick-todo-app.appspot.com\",\r\n  messagingSenderId: \"114323470299\",\r\n  appId: \"1:114323470299:web:5db79253e64602c2f199fe\",\r\n  measurementId: \"G-SHK9S7SRYF\"\r\n};\r\n  \r\n  Object.freeze(firebaseConfig);\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  export const signinUser = (email,password) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, password);\r\n  };\r\n  \r\n  export const signoutUser = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  export const AUTH = firebase.auth();\r\n  ","const events = {};\r\n\r\nconst EVENTS = {\r\n    SHOW_SPINNER : 'SHOW_SPINNER',\r\n    HIDE_SPINNER : 'HIDE_SPINNER',\r\n    \r\n\r\n    SELECT_CLIENT : \"SELECT_CLIENT\",\r\n    OPEN_NEW_CLIENT_POPUP : \"OPEN_NEW_CLIENT_POPUP\",\r\n    DELETE_CLIENT : \"DELETE_CLIENT\",\r\n\r\n    OPEN_NEW_ENTRY_POPUP : \"OPEN_NEW_ENTRY_POPUP\",\r\n    OPEN_VIEW_ENTRY_POPUP : \"OPEN_VIEW_ENTRY_POPUP\",\r\n    OPEN_EDIT_ENTRY_POPUP : \"OPEN_EDIT_ENTRY_POPUP\",\r\n    UPDATE_ENTRY_STATUS : \"UPDATE_ENTRY_STATUS\",\r\n    DELETE_ENTRY : \"DELETE_ENTRY\",\r\n\r\n    CLOSE_POPUP : \"CLOSE_POPUP\"\r\n}\r\n\r\nObject.freeze(EVENTS);\r\n\r\nconst registerListener = (eventName, callback) => {\r\n    if(!eventName || !callback) return;\r\n    try {\r\n        if (!events[eventName]) {\r\n            events[eventName] = [];\r\n        }\r\n        \r\n        const duplicate = events[eventName].find((listener) => {\r\n            return listener.callback == callback;\r\n        });\r\n\r\n        if (!duplicate) {\r\n            events[eventName].push({ callback});\r\n        }\r\n    } catch (error) {\r\n        console.error('@error : ',error)\r\n    }\r\n\r\n};\r\n\r\nconst unregisterListener = (eventName, callback) => {\r\n    try {\r\n        if (events[eventName]) {\r\n            events[eventName] = events[eventName].filter(cb => cb.callback != callback);\r\n        }\r\n    } catch (error) {\r\n        console.error('@error : ',error)\r\n    }\r\n  };\r\n \r\nconst fireEvent = (eventName, payload) => {\r\n    if (events[eventName]) {\r\n        const listeners = events[eventName];\r\n        listeners.forEach((listener) => {       \r\n            try {\r\n                listener.callback.call(this,payload);\r\n            } catch (error) {\r\n                console.error('@eventName : ',eventName) &&\r\n                console.error('@listener : ',listener) &&\r\n                console.error('@payload : ',payload) &&\r\n                console.error('@error : ',error)\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport {\r\n    registerListener,\r\n    unregisterListener,\r\n    fireEvent,\r\n    EVENTS\r\n};\r\n ","<script>\r\n\r\n    export let label;\r\n    export let onClick;\r\n    export let type;\r\n\r\n</script>\r\n\r\n\r\n<button class=\"pointer text-bold border-box\" data-type={type} on:click={onClick}>{label}</button>\r\n\r\n<style>\r\n    button{\r\n        border: none;\r\n        outline: none;\r\n        padding: 0.5rem 2rem;\r\n        border-radius: 4px;\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        box-sizing: border-box;\r\n        font-size: 1rem;\r\n    }\r\n\r\n    button[data-type=\"primary\"]{\r\n        background-color: var(--btn-primary-color);\r\n        border : 2px solid var(--btn-primary-color);\r\n        color: white;\r\n    }\r\n\r\n    button[data-type=\"secondary\"]{\r\n        background-color: var(--btn-secondary-color);\r\n        border : 2px solid var(--btn-secondary-color);\r\n        color: white;\r\n    }\r\n\r\n    button[data-type=\"warning\"]{\r\n        background-color: var(--warning-color);\r\n        border : 2px solid var(--warning-color);\r\n        color: white;\r\n    }\r\n\r\n    button[data-type=\"danger\"]{\r\n        background-color: var(--danger-color);\r\n        border : 2px solid var(--danger-color);\r\n        color: white;\r\n    }\r\n\r\n    button[data-type=\"success\"]{\r\n        background-color: var(--success-color);\r\n        border : 2px solid var(--success-color);\r\n        color: white;\r\n    }\r\n\r\n    button[data-type=\"link primary\"]{\r\n        color: var(--btn-primary-color);\r\n        text-decoration: underline;\r\n        font-weight: 600;\r\n        padding: 0;\r\n        background-color: transparent;\r\n    }\r\n    \r\n</style>","<script>\r\n\r\n    export let hasLabel = false;\r\n    export let type;\r\n    export let name;\r\n    export let label;\r\n    export let placeholder;\r\n    export let onChange;\r\n    export let onKeyUp;\r\n    export let value = \"\";\r\n    export let width_class;\r\n    export let label_class = 'light';\r\n    export let classes;\r\n    export let data_field;\r\n    export let options;\r\n    export let data_type\r\n    export let readOnly;\r\n    export let Required;\r\n</script>\r\n\r\n{#if hasLabel}\r\n    <label class=\"{label_class}\" for={name}>{label}{Required ? ' *' : ''}</label>  \r\n{/if}\r\n\r\n{#if type === 'select'}\r\n    <select class=\"column flex grow border-bottom-primary text-primary {classes} {width_class} border-box text-center pointer border-box justify-center status-column {data_field}\" {value} {name} on:change={onChange} data-type={data_type} data-field={data_field} disabled={readOnly}>\r\n        {#each options as status}\r\n            <option value={status} class=\"option bg-white text-primary\">{status}</option>\r\n        {/each}\r\n    </select>\r\n    {:else if type === \"text-long\"}\r\n        <textarea class=\"border-primary text-primary border-box bg-white {width_class}\" rows=\"10\" on:change={onChange} data-type={data_type} data-field={data_field} {value} readonly={readOnly}></textarea>\r\n    {:else}\r\n        <input class=\"{classes} border-box {width_class}\" {type} {name} on:change={onChange} on:keyup={onKeyUp} {value} {placeholder} data-type={data_type} data-field={data_field} readonly={readOnly}/>\r\n{/if}\r\n\r\n\r\n<style>\r\n\r\n    input{\r\n        padding: 0.5em;\r\n        outline: none;\r\n        border : none;\r\n    }\r\n\r\n    label {\r\n        margin-bottom: 0.25rem;\r\n        color: #d0d2d6;\r\n        font-size: .857rem;\r\n    }\r\n\r\n    .width-half{\r\n        width: 50%;\r\n    }\r\n\r\n    .width-full{\r\n        width: 100%;\r\n    }\r\n\r\n    label.dark{\r\n        color: var(--text-primary-color);\r\n    }\r\n    \r\n    label.light{\r\n        color: var(--text-secondary-color);\r\n    }\r\n\r\n    input[type=\"text\"]{\r\n        border: none;\r\n        outline: none;\r\n        color: var(--text-secondary-color);\r\n    }\r\n\r\n    input[type=\"date\"] , input[type=\"time\"]{\r\n        border: none;\r\n        outline: none;\r\n        flex-shrink: 0.75;\r\n        color: var(--text-secondary-color);\r\n    }\r\n\r\n    ::-webkit-calendar-picker-indicator {\r\n        filter: invert(1);\r\n    }\r\n\r\n    select{\r\n        border: none;\r\n        outline: none;\r\n        -webkit-appearance: none;\r\n        -moz-appearance: none;\r\n        text-indent: 1px;\r\n        text-overflow: '';\r\n    }\r\n\r\n    input[data-type=\"field\"][type=\"text\"]{\r\n        border: 1px solid var(--border-primary-color);\r\n        background-color: var(--secondary-color);\r\n        color : var(--text-tertiary-color);\r\n        border-radius: .357rem;\r\n    }\r\n\r\n    input[data-type=\"field\"][type=\"email\"]{\r\n        border: 1px solid var(--border-primary-color);\r\n        background-color: var(--secondary-color);\r\n        color : var(--text-tertiary-color);\r\n        border-radius: .357rem;\r\n    }\r\n\r\n    input[data-type=\"field\"][type=\"password\"]{\r\n        border: 1px solid var(--border-primary-color);\r\n        background-color: var(--secondary-color);\r\n        color : var(--text-tertiary-color);\r\n        border-radius: .357rem;\r\n    }\r\n\r\n    input[data-type=\"field\"][type=\"date\"] , input[data-type=\"field\"][type=\"time\"]{\r\n        border: 1px solid var(--border-primary-color);\r\n        background-color: var(--secondary-color);\r\n        color : var(--text-tertiary-color);\r\n        border-radius: .357rem;\r\n    }\r\n\r\n    textarea[data-type=\"field\"]{\r\n        border: 1px solid var(--border-primary-color);\r\n        background-color: var(--secondary-color);\r\n        color : var(--text-tertiary-color);\r\n        border-radius: .357rem;\r\n    }\r\n\r\n    select[data-type=\"field\"]{\r\n        border-radius: .357rem;\r\n    }\r\n\r\n    select:disabled {\r\n        opacity: 1;\r\n    }\r\n\r\n    input:-internal-autofill-selected {\r\n        border: 1px solid var(--border-primary-color) !important;\r\n        background-color: var(--secondary-color) !important;\r\n        color : var(--text-tertiary-color) !important;\r\n        border-radius: .357rem !important;\r\n    }\r\n\r\n    label.has-error{\r\n        color: #ea5455 !important;\r\n    }\r\n\r\n    input.has-error{\r\n        background-color: #ea545520 !important;\r\n        border-color: #ea5455 !important;\r\n    }\r\n\r\n</style>","<script>\r\n    import { signinUser } from \"../firebase\";\r\n    import {fireEvent,EVENTS} from \"../EventManager\";\r\n    import Button from \"../utility/Button.svelte\";\r\n    import Input from \"../utility/Input.svelte\";\r\n\r\n    let user = {\r\n        email:\"\",\r\n        name:\"\"\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        user[e.target.name] = e.target.value;\r\n    }\r\n\r\n    const onSignIn = () => {\r\n        \r\n        const email = user.email;\r\n        const password = user.password;\r\n\r\n        if(email && password){\r\n            fireEvent(EVENTS.SHOW_SPINNER,{});\r\n            signinUser(email,password)\r\n            .then (res => {\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            })\r\n            .catch(err => {\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            });\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n    .container{\r\n        margin: 0;\r\n        padding: 0;\r\n        height: 100vh;\r\n    }\r\n\r\n    .right{\r\n        width: 30%;\r\n        height: 100%;\r\n        background-color: var(--secondary-color);\r\n    }\r\n\r\n    .left{\r\n        width: 70%;\r\n        height: 100%;\r\n    }\r\n\r\n    .app-header{\r\n        padding: 1.5em 1em;\r\n    }\r\n\r\n    .right header{\r\n        padding: 1.5em 1em;\r\n    }\r\n\r\n    .app-footer{\r\n        padding: 1.5em 1em;\r\n    }\r\n\r\n    .title {\r\n        font-family: normal;\r\n        font-size: 1.75em;\r\n        color: var(--primary-color);\r\n    }\r\n\r\n    .sub-title{\r\n        font-size: 1rem;\r\n        color: white;\r\n    }\r\n\r\n    .logo {\r\n        width: 8em;\r\n        margin: 0 5px;\r\n    }\r\n\r\n    .form-container{\r\n        height: 100vh;\r\n    }\r\n\r\n    .form {\r\n        padding: 0 3rem;\r\n        width: 25%;\r\n    }\r\n\r\n    .highlight{\r\n        color: var(--secondary-color);\r\n    }\r\n\r\n    .home{\r\n        width: 95%;\r\n        height: 95%;\r\n    }\r\n\r\n    .form{\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .sub-container{\r\n        width: 100%;\r\n    }\r\n\r\n    .illustration-container{\r\n        height: 80%;\r\n    }\r\n    \r\n    .dev-name{\r\n        padding: 0.25rem 0.5rem;\r\n        background: white;\r\n        border-radius: 5px;\r\n    }\r\n\r\n    \r\n\r\n</style>\r\n\r\n<div class=\"flex flex-row container\">\r\n    \r\n        <div class=\"left\">\r\n            <header class=\"app-header flex justify-space-between align-center\">\r\n                <span class=\"app-name flex align-center text-bold text-primary\">\r\n                    <img class=\"logo\" src=\"./logo.svg\" alt=\"worklist\"/>\r\n                </span>\r\n            </header>\r\n            \r\n            <div class=\"illustration-container flex justify-center flex-row align-center grow\">\r\n                <div class=\"flex justify-center flex-column align-center tagline-container\">\r\n                    <img class=\"home\" src=\"./login.svg\" alt=\"worklist\"/>    \r\n                </div>\r\n            </div>\r\n    \r\n            \r\n        </div>\r\n\r\n        <div class=\"right\">\r\n            <div class=\"form-container flex justify-center flex-column login-form\">\r\n                <header class=\"flex align-center justify-end\">\r\n                    <Button label=\"Donate\" type=\"danger\"/>\r\n                </header>\r\n                <div class=\"sub-container grow flex justify-center flex-row\">\r\n                    <div class=\"form form-right flex justify-center flex-column\">\r\n                        <span class=\"title flex align-center text-bold text-primary\">\r\n                            Welcome to worklist\r\n                        </span>\r\n                        <br/>\r\n                        <span class=\"sub-title flex align-center text-primary\">\r\n                            Please sign-in to your account and start the adventure\r\n                        </span>\r\n                        <br/>\r\n                        <br/>\r\n                        <Input data_type=\"field\" name=\"email\" type=\"email\" label=\"Email\" label_class=\"light\" hasLabel onChange={handleChange}/>\r\n                        <br/>\r\n                        <Input data_type=\"field\" name=\"password\" type=\"password\" label=\"Password\" label_class=\"light\" hasLabel onChange={handleChange}/>\r\n                        <br/>\r\n                        <Button onClick={onSignIn} label=\"Login\" type=\"primary\"/>\r\n                    </div>\r\n                </div>\r\n                <footer class=\"app-footer flex justify-end align-center bg-transparent\">\r\n                    <span class=\"dev-name text-bold highlight text-underline\">Made with ❤️ by Suban Khoja</span>\r\n                </footer>\r\n            </div>\r\n           \r\n        </div>\r\n       \r\n</div>","\r\nexport const APP_NAME = 'onelist';\r\n\r\nconst API = {\r\n    BASE_ENDPOINT : 'https://worklist1-935b.restdb.io/rest/work-entry',\r\n    ENDPOINTS : {\r\n        \"getUserData\" : 'getUserData',\r\n        \"getUserGeneralTasks\" : 'getUserGeneralTasks',\r\n        \"createList\" : \"createList\",\r\n        \"updateList\" : \"updateList\",\r\n        \"deleteList\" : \"deleteList\",\r\n        \"createTask\" : \"createTask\",\r\n        \"updateTask\" : \"updateTask\",\r\n        \"deleteTask\" : \"deleteTask\",\r\n        \"createGeneralTask\" : \"createGeneralTask\",\r\n        \"updateGeneralTask\" : \"updateGeneralTask\",\r\n        \"deleteGeneralTask\" : \"deleteGeneralTask\",\r\n        \"deleteBulkGeneralTask\" : \"deleteBulkGeneralTask\",\r\n        \"createComponent\" : \"createComponent\",\r\n        \"updateComponent\" : \"updateComponent\",\r\n        \"deleteComponent\" : \"deleteComponent\",\r\n        \"exportListComponents\":\"exportListComponents\"\r\n    }\r\n};\r\n\r\nconst MONTH = {\r\n    \"01\" : \"January\",\r\n    \"02\" : \"February\",\r\n    \"03\" : \"March\",\r\n    \"04\" : \"April\",\r\n    \"05\" : \"May\",\r\n    \"06\" : \"June\",\r\n    \"07\" : \"July\",\r\n    \"08\" : \"August\",\r\n    \"09\" : \"September\",\r\n    \"10\" : \"October\",\r\n    \"11\" : \"November\",\r\n    \"12\" : \"December\"\r\n\r\n}\r\n\r\nconst DEFAULTS = {\r\n    PAYMENT_STATUS : \"Pending\",\r\n    DURATION : 60\r\n}\r\n\r\nconst PAYMENT_STATUS = [\r\n    \"Pending\",\r\n    \"Paid\"\r\n];\r\n\r\nconst ENTRY_DURATIONS = [30,60,90,120,150];\r\n\r\nconst ENTRY_COLUMN = [\r\n    {\r\n        label : \"Date\",\r\n        key : \"start_date\",\r\n        show_in_list : true,\r\n        show_in_detail : true,\r\n        show_header : true,\r\n        allow_inline_edit : false,\r\n        field_type : \"date\"\r\n    },\r\n    {\r\n        label : \"Start Time\",\r\n        key : \"start_time\",\r\n        show_in_list : true,\r\n        show_in_detail : false,\r\n        show_header : true,\r\n        allow_inline_edit : true,\r\n        field_type : \"time\"\r\n    },\r\n    {\r\n        label : \"Duration\",\r\n        key : \"duration\",\r\n        show_in_list : true,\r\n        show_in_detail : false,\r\n        show_header : true,\r\n        allow_inline_edit : true,\r\n        field_type : \"select\"\r\n    },\r\n    {\r\n        label : \"Payment\",\r\n        key : \"payment_status\",\r\n        show_in_list : true,\r\n        show_in_detail : true,\r\n        show_header : true,\r\n        allow_inline_edit : true,\r\n        field_type : \"select\"\r\n    }\r\n];\r\n\r\nconst getEntryPaymentStatusClass = (_type) => {\r\n    if(!_type) return '';\r\n    return _type.replace(' ','-');\r\n}\r\n\r\nconst formatDateString = (_dateString) =>{\r\n    if(!_dateString) return '';\r\n    let dateArr = _dateString.split('-');\r\n    return dateArr[2] + ' ' + MONTH[dateArr[1]] + ' ' + dateArr[0]; \r\n}\r\n\r\nconst convertDateToString = (_date) =>{\r\n    if(!_date) return '';\r\n    let year = _date.getFullYear();\r\n    let month = _date.getMonth() + 1;\r\n    let date = _date.getDate();\r\n    date = (date < 10) ? '0' + date : date;\r\n    month = (month < 10) ? '0' + month : month;\r\n    return year + '-' + month + '-' + date; \r\n}\r\n\r\nconst convertDateToTimeString = (_date) =>{\r\n    if(!_date) return '';\r\n    let hour = _date.getHours();\r\n    let minute = _date.getMinutes();\r\n    let second = _date.getSeconds();\r\n    hour = (hour < 10) ? '0' + hour : hour;\r\n    minute = (minute < 10) ? '0' + minute : minute;\r\n    second = (second < 10) ? '0' + second : second;\r\n    return hour + ':' + minute + ':' + second; \r\n}\r\n\r\nconst formatTimeString = (_TimeString) =>{\r\n    if(!_TimeString) return '';\r\n    let timeArr = _TimeString.split(':');\r\n    let _hour = Number(timeArr[0]);\r\n    const isAMPM = _hour >= 12 ? 'PM' : 'AM';\r\n    _hour = (_hour > 12) ? _hour - 12 : _hour;\r\n    _hour = (_hour < 10) ? '0' + _hour : _hour;\r\n    return _hour + ':' + timeArr[1] + ':' + timeArr[2] + ' ' + isAMPM; \r\n}\r\n\r\nObject.freeze(API);\r\nObject.freeze(ENTRY_COLUMN);\r\nObject.freeze(DEFAULTS);\r\nObject.freeze(PAYMENT_STATUS);\r\nObject.freeze(MONTH);\r\nObject.freeze(ENTRY_DURATIONS);\r\n\r\nexport {\r\n    API,\r\n    ENTRY_COLUMN,\r\n    DEFAULTS,\r\n    PAYMENT_STATUS,\r\n    getEntryPaymentStatusClass,\r\n    formatDateString,\r\n    formatTimeString,\r\n    convertDateToString,\r\n    convertDateToTimeString,\r\n    ENTRY_DURATIONS\r\n};\r\n\r\n\r\n\r\n\r\n","import { API } from \"./constants\";\r\n\r\nexport const getUserDataCallout = () => {\r\n    return fetch(API.BASE_ENDPOINT,{\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-apikey': '6289328e4cca5010d1293f02',\r\n          }\r\n    })\r\n    .then(res => res.json())\r\n    .catch(err => {\r\n        console.error('getUserDataCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const createTimeEntry = (_entry) => {\r\n    return fetch(API.BASE_ENDPOINT,{\r\n        method : 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-apikey': '6289328e4cca5010d1293f02',\r\n        },\r\n        body : JSON.stringify(_entry)\r\n    })\r\n    .then(res => res.json())\r\n    .catch(err => {\r\n        console.error('getUserDataCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const deleteTimeEntry = (entry_id) => {\r\n    return fetch(API.BASE_ENDPOINT+'/'+entry_id,{\r\n        method : 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-apikey': '6289328e4cca5010d1293f02',\r\n        }\r\n    })\r\n    .then(res => res.json())\r\n    .catch(err => {\r\n        console.error('getUserDataCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const updateEntryStatus = (entry) => {\r\n    return fetch(API.BASE_ENDPOINT+'/'+entry._id,{\r\n        method : 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-apikey': '6289328e4cca5010d1293f02',\r\n        },\r\n        body : JSON.stringify({\r\n            payment_status : entry.payment_status\r\n        })\r\n    })\r\n    .then(res => res.json())\r\n    .catch(err => {\r\n        console.error('getUserDataCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const getUserGeneralTasksCallout = (user_id) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.getUserGeneralTasks,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('getUserGeneralTasksCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const createListCallout = (user_id,list_name,list_detail) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.createList,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            list_name,\r\n            list_detail\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('createListCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const updateListCallout = (user_id,list_id,list_name,list_detail) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.updateList,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            list_id,\r\n            list_name,\r\n            list_detail\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('updateListCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const deleteListCallout = (user_id,list_id) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteList,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            list_id\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('deleteListCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const createTaskCallout = (user_id,task_name,task_detail,list_task_root_id) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.createTask,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            task_name,\r\n            task_detail,\r\n            list_task_root_id\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('createTaskCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const updateTaskCallout = (user_id,task_id,task_name,task_detail) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.updateTask,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            task_id,\r\n            task_name,\r\n            task_detail\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('updateTaskCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const deleteTaskCallout = (user_id,task_id) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteTask,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            task_id\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('deleteTaskCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const createGeneralTaskCallout = (user_id,task_name,task_detail) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.createGeneralTask,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            task_name,\r\n            task_detail\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('createTaskCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const updateGeneralTaskCallout = (user_id,task_id,task_name,task_detail) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.updateGeneralTask,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            task_id,\r\n            task_name,\r\n            task_detail\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('updateGeneralTaskCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const deleteGeneralTaskCallout = (user_id,task_id) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteGeneralTask,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            task_id\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('deleteGeneralTaskCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const deleteGeneralBulkTaskCallout = (user_id,task_ids) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteBulkGeneralTask,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            task_ids\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('deleteGeneralBulkTaskCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const createComponentCallout = (user_id,component_name,component_detail,list_component_root_id) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.createComponent,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            component_name,\r\n            component_detail,\r\n            list_component_root_id\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('createComponentCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const updateComponentCallout = (user_id,component_id,component_name,component_detail) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.updateComponent,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            component_id,\r\n            component_name,\r\n            component_detail\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('updateComponentCallout : ',err);\r\n    });\r\n};\r\n\r\nexport const deleteComponentCallout = (user_id,component_id) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteComponent,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            component_id\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('deleteComponentCallout : ',err);\r\n    });\r\n};\r\n\r\n\r\nexport const exportListComponentsCallout = (user_id,file_name,data) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.exportListComponents,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            file_name,\r\n            data\r\n        })\r\n    }).then(res => res.blob())\r\n    .catch(err => {\r\n        console.error('exportListComponentsCallout : ',err);\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n","<script>\r\n\r\n    import Button from \"../utility/Button.svelte\";\r\n    import { fireEvent,EVENTS } from \"../EventManager\";\r\n    \r\n    export let header;\r\n    export let OnSave;\r\n    export let showSave = true;\r\n    export let showActions = true;\r\n    export let saveLabel = \"Save\";\r\n    export let _popup_name;\r\n\r\n    const fireClosePopupEvent = () => {\r\n        fireEvent(EVENTS.CLOSE_POPUP,_popup_name);\r\n    }\r\n    \r\n    export let OnClose = fireClosePopupEvent;\r\n\r\n</script>\r\n<div class=\"modal-backdrop fixed\"></div>\r\n<div class=\"modal-container fixed flex justify-center align-center bg-transparent\">\r\n    <div class=\"modal\">\r\n        <header class=\"modal-header flex justify-space-between\">\r\n            <h3>{header}</h3>\r\n            <svg on:click={OnClose} xmlns=\"http://www.w3.org/2000/svg\" width=\"21px\" height=\"21px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"pointer\">\r\n                <line data-v-6b93e4ba=\"\" x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                <line data-v-6b93e4ba=\"\" x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n            </svg>\r\n        </header>\r\n        <div class=\"modal-body\">\r\n            <slot/>\r\n        </div>\r\n        {#if showActions}\r\n            <footer class=\"modal-footer flex flex-end align-center\">\r\n                {#if showSave}\r\n                    <Button onClick={OnSave} label={saveLabel} type=\"primary\"/>\r\n                {/if}\r\n            </footer>    \r\n        {/if}\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n\r\n    .modal-backdrop{\r\n        height: 100vh;\r\n        width: 100vw;\r\n        left: 0;\r\n        top: 0;\r\n        background: #242a38;\r\n        opacity: .75;\r\n        z-index: 3;\r\n    }\r\n\r\n    .modal-container{\r\n        height: 100vh;\r\n        width: 100vw;\r\n        left: 0;\r\n        top: 0;\r\n        z-index: 5;\r\n    }\r\n\r\n    .modal{\r\n        width: 40vw;\r\n        height: auto;\r\n        background-color: var(--secondary-color);\r\n        z-index: 9;\r\n    }\r\n\r\n    .modal-header{\r\n        background-color: var(--quaternary-color);\r\n        padding: 1rem;\r\n        color: var(--text-secondary-color);\r\n    }\r\n\r\n    .modal-header > h3{\r\n        font-size: 1.07rem;\r\n        margin: 0;\r\n    }\r\n\r\n    .modal-body{\r\n        padding: 1.5rem;\r\n    }\r\n\r\n    .modal-footer{\r\n        padding: 1rem;\r\n        border-top:  1px solid rgba(34,41,47,.05);\r\n        background-color: var(--secondary-color);\r\n        border-color: var(--border-secondary-color);\r\n    }\r\n\r\n</style>\r\n","<script>\r\n    import { EVENTS , fireEvent } from \"./EventManager\";\r\n    import {signoutUser} from './firebase'\r\n    export let clients = [];\r\n    export let selected_client;\r\n\r\n    const sendSelectClientEvent = (evt) => {\r\n        fireEvent(EVENTS.SELECT_CLIENT,evt.currentTarget.dataset.name);\r\n    } \r\n\r\n    const sendNewClientEvent = (evt) => {\r\n        fireEvent(EVENTS.OPEN_NEW_CLIENT_POPUP,null);\r\n    }\r\n\r\n</script>\r\n\r\n<main>\r\n    <div class=\"sidebar fixed\">\r\n        <div class=\"content flex flex-column\">\r\n            <ul class=\"list-container grow\">\r\n                <li class=\"flex align-center justify-end list-actions border-box relative\">\r\n                    <div role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\" class=\"alert alert-success pointer\" data-v-aa799a9e=\"\" on:click={sendNewClientEvent}>\r\n                        <div class=\"flex align-center justify-center alert-body box-border\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus\">\r\n                                <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n                            </svg>\r\n                            <span>New Client</span>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <br/>\r\n                {#if clients && clients.length}\r\n                    {#each clients as client}\r\n                        <li class=\"flex align-center pointer justify-start list-item border-box relative\" data-name={client} on:click={sendSelectClientEvent}>\r\n                            <span class=\"item-content flex align-center border-box { selected_client == client ? 'active' : ''}\"> \r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"list-logo align-center feather feather-file-text\">\r\n                                    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                                    <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                                </svg>\r\n                                <span class=\"align-center item-name\"> {client} </span>\r\n                            </span>\r\n                        </li>\r\n                    {/each}\r\n                {/if}\r\n            </ul>\r\n            <ul class=\"list-container\">\r\n                <li class=\"flex align-center justify-end list-actions border-box relative\">\r\n                    <div role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\" class=\"alert alert-error pointer\" data-v-aa799a9e=\"\" on:click={signoutUser}>\r\n                        <div class=\"flex align-center justify-center alert-body box-border\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-50 feather feather-log-out\">\r\n                                <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path>\r\n                                <polyline points=\"16 17 21 12 16 7\"></polyline>\r\n                                <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line>\r\n                            </svg>\r\n                            &nbsp;\r\n                            <span>Logout</span>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</main>\r\n\r\n<style>\r\n\r\n    .sidebar{\r\n        width: 20vw;\r\n        background-color: var(--secondary-color);\r\n        height: 100%;\r\n        z-index: 1;\r\n        left: 0;\r\n        box-shadow: 0 0 15px 0 rgb(34 41 47 / 5%);\r\n        padding: 1rem;\r\n    }\r\n\r\n    .sidebar .content{\r\n        height: calc(100% - 2.45rem);\r\n    }\r\n\r\n    .sidebar .list-container{\r\n       padding: 0;\r\n       list-style: none;\r\n    }\r\n\r\n    .list-item{\r\n        white-space : nowrap;\r\n        color: var(--text-secondary-color);\r\n        line-height: 1.45;\r\n        padding: 0.25rem 0;\r\n    }\r\n\r\n    .list-item .item-content{\r\n        padding: 10px 15px 10px 15px;\r\n        /* margin: 5px 15px; */\r\n        width: 100%;\r\n        /* border-radius: 5px; */\r\n        overflow: hidden;\r\n        border: 1px solid transparent;\r\n    }\r\n\r\n    .item-name{\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        width: 90%;\r\n    }\r\n\r\n    .list-logo{\r\n        margin-right: 8px;\r\n    }\r\n\r\n    .item-content:hover{\r\n        background-color: #7367f020;\r\n\t    border: 1px solid var(--primary-color);\r\n    }\r\n\r\n    .item-content.active{\r\n        background : var(--primary-color);\r\n    }\r\n\r\n    ul{\r\n        margin: 0;\r\n    }\r\n\r\n    .alert{\r\n        border: none;\r\n        padding: 0;\r\n        width: 100%;\r\n        text-align: center;\r\n    }\r\n\r\n    .alert-success{\r\n        background-color: #28c76f20;\r\n        color : #28c76f;\r\n    }\r\n\r\n    .alert-error{\r\n        background-color: #ea545520;\r\n        color: #ea5455;\r\n    }\r\n\r\n    .alert-body{\r\n        padding: .71rem 1rem;\r\n    }\r\n\r\n\r\n</style>","<script>\r\n    export let type;\r\n    export let selected = true;\r\n    export let OnClick\r\n</script>\r\n\r\n<span class=\"icon flex justify-center align-center pointer {selected ? type  :''}\" on:click={OnClick}>\r\n    <slot />\r\n</span>\r\n\r\n<style>\r\n\r\n    .icon{\r\n        padding: .3rem;\r\n        color: white;\r\n        border-radius: 4px;\r\n    }\r\n\r\n    .primary{\r\n        background-color: var(--btn-primary-color);\r\n    }\r\n\r\n    .danger{\r\n        background-color: var(--danger-color);\r\n    }\r\n    \r\n    .warning{\r\n        background-color: var(--warning-color);\r\n    }\r\n\r\n    .shaded-white{\r\n        padding: 0.7rem;\r\n        background-color: #f8f8f830;\r\n    }\r\n\r\n</style>\r\n\r\n","<script>\r\n\r\n    import { fireEvent, EVENTS } from \"./EventManager\";\r\n    import { PAYMENT_STATUS ,getEntryPaymentStatusClass , formatDateString , formatTimeString } from \"./constants\";\r\n    import Input from \"./utility/Input.svelte\";\r\n    import Icon from \"./utility/Icon.svelte\";\r\n    export let entry;\r\n    export let actions = [];\r\n\r\n    const sendOpenComponentDetailEvent = () => {\r\n        fireEvent(EVENTS.OPEN_EDIT_ENTRY_POPUP,entry._id);\r\n    }\r\n\r\n    const sendChangeStatusEvent = (evt) => {\r\n        entry.payment_status =  evt.target.value;\r\n        fireEvent(EVENTS.UPDATE_ENTRY_STATUS,{\r\n            _id : entry._id,\r\n            payment_status : entry.payment_status\r\n        });\r\n    }\r\n\r\n    const sendDeleteComponentDetailEvent = () => {\r\n        fireEvent(EVENTS.DELETE_ENTRY,entry._id);\r\n    }\r\n    \r\n    const sendViewComponentDetailEvent = () => {\r\n        fireEvent(EVENTS.OPEN_VIEW_ENTRY_POPUP,entry._id);\r\n    }\r\n\r\n</script>\r\n\r\n<li class=\"columns flex justify-space-between align-center border-box\">\r\n\r\n    <span class=\"column flex grow justify-center border-box text-bold pointer entry_column justify-start align-center\">\r\n        <Input label=\"Name\"  width_class=\"width-full\" type=\"text\" classes=\"bg-transparent\" value={formatDateString(entry.start_date)} data_field=\"start_date\" readOnly/>\r\n        <span class=\"row-actions\">\r\n            {#if actions.includes('EDIT')}\r\n                <Icon type=\"warning\" OnClick={sendOpenComponentDetailEvent}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-75 feather feather-edit-2\">\r\n                        <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"></path>\r\n                    </svg>\r\n                </Icon>\r\n                &nbsp;&nbsp;\r\n            {/if}\r\n            {#if actions.includes('DELETE')}\r\n                <Icon type=\"danger\" OnClick={sendDeleteComponentDetailEvent}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-75 feather feather-trash\">\r\n                        <polyline points=\"3 6 5 6 21 6\"></polyline>\r\n                        <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\r\n                    </svg>\r\n                </Icon>\r\n            {/if}\r\n            {#if actions.includes('VIEW')}\r\n                <Icon type=\"warning\" OnClick={sendViewComponentDetailEvent}>\r\n                    <svg data-v-9a6e255c=\"\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" id=\"invoice-row-5036-preview-icon\" class=\"mx-1 feather feather-eye\" style=\"\">\r\n                        <path data-v-9a6e255c=\"\" d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n                        <circle data-v-9a6e255c=\"\" cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n                    </svg>\r\n                </Icon>\r\n                &nbsp;&nbsp;\r\n            {/if}\r\n        </span>\r\n\r\n    </span>\r\n    <span class=\"column flex grow justify-center border-box text-bold pointer entry_column  justify-center align-center\">\r\n        <Input label=\"Version\" width_class=\"width-full\" type=\"text\" classes=\"bg-transparent text-center\" value={formatTimeString(entry.start_time)} data_field=\"start_time\" readOnly/>\r\n    </span>\r\n    <span class=\"column flex grow justify-center border-box text-bold pointer entry_column  justify-center align-center\">\r\n        <Input label=\"Version\" width_class=\"width-full\" type=\"text\" classes=\"bg-transparent text-center\" value={entry.duration} data_field=\"duration\" readOnly/>\r\n    </span>\r\n    <span class=\"column flex grow justify-center border-box text-bold pointer entry_column justify-center align-stretch\">\r\n        <Input label=\"Type\" width_class=\"width-full\" type=\"select\" classes=\"bg-transparent text-center {getEntryPaymentStatusClass(entry.payment_status)}\" value={entry.payment_status} data_field=\"payment_status\" options={PAYMENT_STATUS} onChange={sendChangeStatusEvent}/>\r\n    </span>\r\n         \r\n</li>\r\n\r\n<style>\r\n\r\n    .columns{\r\n        width: 100%;\r\n        list-style: none;\r\n        background-color: var(--secondary-color);\r\n        margin-bottom: 4px;\r\n        color: var(--text-secondary-color);\r\n        padding-left: 1rem;\r\n        box-shadow: 0 4px 24px 0 rgb(34 41 47 / 24%);\r\n        border-radius: 4px;\r\n    }\r\n\r\n    .column{\r\n        height: 40px;\r\n    }\r\n\r\n    .row-actions{\r\n        padding: 0 1rem;\r\n        display: none;\r\n    }\r\n\r\n    li.columns:hover .row-actions{\r\n        display: inherit;\r\n    }\r\n\r\n\r\n</style>","<script>\r\n    import { ENTRY_COLUMN } from \"./constants\";\r\n    import { EVENTS , fireEvent } from \"./EventManager\";\r\n    import { AUTH } from \"./firebase\";\r\n    import Component from \"./Component.svelte\";\r\n    import { exportListComponentsCallout } from \"./api\";\r\n    import Icon from \"./utility/Icon.svelte\";\r\n    \r\n    export let work_entries = [];\r\n    export let selected_client = \"\";\r\n\r\n    const sendNewEntryEvent = () => {\r\n        console.log('sendNewEntryEvent Fired');\r\n        fireEvent(EVENTS.OPEN_NEW_ENTRY_POPUP,{});\r\n    }\r\n\r\n    const exportTimeEntries = () => {\r\n        const data = JSON.stringify(work_entries);\r\n        const file_name = ' Time Entry Export '+new Date().toISOString();\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n    }\r\n\r\n</script>\r\n\r\n<main>\r\n    <div class=\"detail-container border-box\">\r\n        <div class=\"flex justify-space-between list-header border-box align-center\">\r\n            \r\n            <div class=\"flex list-dates grow align-center\">\r\n                <span class=\"column flex justify-start border-box text-bold pointer list_name align-center\">\r\n                    <span class=\"list_name\">{selected_client}</span>\r\n                </span>\r\n            </div>\r\n\r\n        </div>\r\n        \r\n        <div class=\"task-header flex align-center justify-space-between\">\r\n            <div class=\"flex align-center\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon\">\r\n                    <path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path>\r\n                    <polyline points=\"13 2 13 9 20 9\"></polyline>\r\n                </svg>\r\n                <span class=\"task-title\"> Time Entries </span>\r\n            </div>\r\n            <div class=\"flex align-center\">\r\n                <Icon type=\"primary\" OnClick={sendNewEntryEvent}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus\">\r\n                        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n                    </svg>\r\n                </Icon>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n        {#if work_entries && work_entries.length}\r\n            <div class=\"task-container flex justify-start align-center grow flex-column\">\r\n                <li class=\"columns flex justify-space-between align-center text-white text-bold\">\r\n                    {#each ENTRY_COLUMN as column,index}\r\n                        {#if column.show_in_list}\r\n                            <span class=\"column flex grow border-box text-bold entry_column {index == 0 ? 'justify-start' : 'justify-center'}\">{ column.show_header ? column.label : ''}</span>    \r\n                        {/if}\r\n                    {/each}\r\n                </li>\r\n                {#each work_entries as entry}\r\n                    <Component {entry} actions={['DELETE']}/>    \r\n                {/each}\r\n            </div>\r\n            {:else}\r\n            <div role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\" class=\"alert alert-primary\" data-v-aa799a9e=\"\">\r\n                <div class=\"alert-body box-border\">\r\n                    <span>No Entry.</span>\r\n                </div>\r\n            </div>\r\n        {/if}\r\n    </div>\r\n</main>\r\n\r\n<style>\r\n\r\n    .detail-container{\r\n        margin-left: calc(20vw + 5.25rem);\r\n        height: 100vh;\r\n        width: calc(100vw - (20vw + 5.25rem));\r\n        padding: 1rem;\r\n    }\r\n\r\n    .list-header{\r\n        padding: 0.5rem 0;\r\n        box-shadow: 0 4px 24px 0 rgb(34 41 47 / 10%);\r\n    }\r\n\r\n    .task-header{\r\n        border-bottom: 1px solid var(--border-tertiary-color);\r\n        margin-bottom: 4px;\r\n        padding: 8px 0;\r\n    }\r\n\r\n    .list_name{\r\n        font-size: 2rem;\r\n        color: white;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n\r\n    .task-title{\r\n        font-size: 1.5rem;\r\n        color: var(--primary-color);\r\n    }\r\n\r\n    .list-status{\r\n       height: 40px;\r\n       padding: 0.25rem 1.25rem;\r\n    }\r\n\r\n    .columns{\r\n        width: 100%;\r\n        list-style: none;\r\n        padding-left: 1rem;\r\n    }\r\n\r\n    .column{\r\n        padding: 0.5rem;\r\n        width: 95%;\r\n    }\r\n\r\n    .task_name{\r\n        width: 55%;\r\n    }\r\n\r\n    .task_start_date,.task_end_date{\r\n        width: 15%;\r\n    }\r\n\r\n    .task_status,.aggregator-container{\r\n        width: 15%;\r\n    }\r\n\r\n    .aggregator-container{\r\n        height: 40px;\r\n    }\r\n\r\n    .column:first-of-type{\r\n        border-left: 0;\r\n    }\r\n\r\n    .column:last-of-type{\r\n        border-right: 0;\r\n    }\r\n\r\n    .action-container{\r\n        width: 10%;\r\n    }\r\n\r\n    .task-container{\r\n        width: 100%;\r\n    }\r\n    \r\n    .task-note{\r\n        width: 100%;\r\n    }\r\n\r\n    .list-start-date{\r\n        margin-right: 5px;\r\n    }\r\n\r\n    .list-end-date{\r\n        margin-left: 5px;\r\n    }\r\n\r\n    .icon{\r\n        color: var(--primary-color);\r\n        font-weight: 400;\r\n    }\r\n\r\n    .task-header .icon{\r\n        margin-right : 5px;\r\n    }\r\n\r\n    .alert{\r\n        background-color: rgba(115,103,240,.12);\r\n        border: none;\r\n        padding: 0;\r\n        border-radius: 0.3rem;\r\n        color : var(--primary-color);;\r\n    }\r\n\r\n    .alert-body{\r\n        padding: .71rem 1rem;\r\n    }\r\n\r\n    .bullet{\r\n        width: .714rem;\r\n        height: .714rem;\r\n        border-radius: 50%;\r\n    }\r\n\r\n    .list-dates{\r\n        width: 90%;\r\n    }\r\n\r\n</style>","<script>\r\n    import { onMount , onDestroy} from \"svelte\";\r\n    import {getUserDataCallout , createTimeEntry , deleteTimeEntry, updateEntryStatus } from '../api';\r\n    import { AUTH } from \"../firebase\";\r\n    import Input from \"../utility/Input.svelte\";\r\n    import Popup from \"../utility/Popup.svelte\";\r\n    import {registerListener , unregisterListener, EVENTS, fireEvent} from '../EventManager';\r\n    import Sidebar from \"../Sidebar.svelte\";\r\n    import Container from \"../Container.svelte\";\r\n    import {getEntryPaymentStatusClass , DEFAULTS , PAYMENT_STATUS , ENTRY_DURATIONS , convertDateToString , convertDateToTimeString} from \"../constants\";\r\n\r\n    let store = [];\r\n    let clients = new Set();\r\n    let work_entries = [];\r\n\r\n    const POPUP = {\r\n        NEW_CLIENT : false,\r\n        NEW_ENTRY : false,\r\n        EDIT_ENTRY : false\r\n    }\r\n\r\n    const processClosePopup = (_popup) => {\r\n        POPUP[_popup] = false; \r\n    }\r\n    \r\n    let selected_client;\r\n    let backup_selected_client;\r\n\r\n    let new_client = {\r\n        name : \"\",\r\n        information : \"\"\r\n    };\r\n\r\n    let client_fields = {\r\n        name : true,\r\n    }\r\n\r\n    const handleNewClientChange = (e) => {\r\n        new_client[e.target.dataset.field] = e.target.value;\r\n    }\r\n\r\n    const processOpenNewClientPopup = () => {\r\n        client_fields = {\r\n            name : true\r\n        }\r\n        POPUP.NEW_CLIENT = true;\r\n    }\r\n\r\n    const processSelectClientEvent = (client_name) => {\r\n        client_fields = {\r\n            name : true\r\n        }\r\n        selected_client = client_name;\r\n        work_entries = store.filter(entry => entry.client === selected_client);\r\n    }\r\n\r\n    const saveNewClient = () => {\r\n        if(!new_client.name){\r\n            client_fields.name = false;\r\n            return;\r\n        }else{\r\n            client_fields.name = true;\r\n        }\r\n        \r\n        clients.push(\r\n            new_client.name\r\n        );\r\n        new_client = {\r\n            name : \"\"\r\n        };\r\n        store = store;\r\n        clients = clients;\r\n        fireEvent(EVENTS.CLOSE_POPUP,'NEW_CLIENT');\r\n        \r\n    }\r\n\r\n    function processEntryList () {\r\n        let sure = window.confirm(`Are you sure you want to delete ${selected_client.name} ?`);\r\n        if(!sure) return;\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n        deleteListCallout(\r\n            AUTH.currentUser.uid,\r\n            selected_list.list_id\r\n        )\r\n        .then(res => {\r\n            for(let i=0;i<lists.length;i++){\r\n                if(lists[i].list_id === selected_list.list_id){\r\n                    lists.splice(i,1);\r\n                }\r\n            }\r\n            selected_list = null;\r\n            backup_selected_list = null;\r\n            store = store;\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        })\r\n        .catch(err => {\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        });\r\n\r\n    }\r\n\r\n    \r\n    let selected_entry;\r\n    let backup_selected_entry;\r\n\r\n    let new_entry = {\r\n        client : \"\",\r\n        start_date : \"\",\r\n        start_time : \"\",\r\n        payment_status : DEFAULTS.PAYMENT_STATUS,\r\n        duration : DEFAULTS.DURATION\r\n    };\r\n\r\n    let entry_fields = {\r\n        start_date : true,\r\n        start_time : true\r\n    }\r\n\r\n    const handleNewEntryChange = (e) => {\r\n        new_entry[e.target.dataset.field] = e.target.value;\r\n    }\r\n\r\n    const handleExistingComponentChange = (e) => {\r\n        selected_component[e.target.dataset.field] = e.target.value;\r\n    }\r\n\r\n    const processOpenEntryPopup = () => {\r\n        \r\n        console.log('processOpenEntryPopup Recieved');\r\n        entry_fields = {\r\n            start_date : true,\r\n            start_time : true\r\n        };\r\n        new_entry.client = selected_client;\r\n        new_entry.start_date = convertDateToString(new Date());\r\n        new_entry.start_time = convertDateToTimeString(new Date());\r\n        POPUP.NEW_ENTRY = true;\r\n    }\r\n    \r\n    const processEditEntryPopup = (entry_id) => {\r\n        for(let i=0;i<work_entries.length;i++){\r\n            if(work_entries[i]._id === entry_id){\r\n                selected_entry = JSON.parse(JSON.stringify(work_entries[i]));\r\n                backup_selected_entry = JSON.parse(JSON.stringify(work_entries[i]));\r\n            }\r\n        }\r\n        component_fields = {\r\n            component_name : true,\r\n            component_date : true,\r\n            component_version : true\r\n        }\r\n        POPUP.EDIT_COMPONENT = true;\r\n    }\r\n\r\n    const processUpdateEntryStatus = (entry) => {\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n        updateEntryStatus(entry)\r\n        .then(res => {\r\n            for(let i=0;i<work_entries.length;i++){\r\n                if(work_entries[i]._id === entry._id){\r\n                    work_entries[i].payment_status = entry.payment_status;\r\n                }\r\n            }\r\n            work_entries = work_entries;\r\n            store = work_entries;\r\n            store = store;\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            fireEvent(EVENTS.CLOSE_POPUP,'NEW_ENTRY');\r\n        })\r\n        .catch(err => {\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        });\r\n    }\r\n\r\n    const saveNewEntry = () => {\r\n        \r\n        if(!new_entry.start_date){\r\n            entry_fields.start_date = false;\r\n            return;\r\n        }else{\r\n            entry_fields.start_date = true;\r\n        }\r\n\r\n\r\n        if(!new_entry.start_time){\r\n            entry_fields.start_time = false;\r\n            return;\r\n        }else{\r\n            entry_fields.start_time = true;\r\n        }\r\n\r\n        console.log('new entry',new_entry);\r\n        \r\n\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n        createTimeEntry(new_entry)\r\n        .then(res => {\r\n            work_entries.push({\r\n                _id:res._id,\r\n                client : new_entry.client,\r\n                start_date : new_entry.start_date,\r\n                start_time : new_entry.start_time,\r\n                payment_status : new_entry.payment_status,\r\n                duration : new_entry.duration,\r\n            });\r\n            \r\n            new_entry = {\r\n                client : \"\",\r\n                start_date : \"\",\r\n                start_time : \"\",\r\n                payment_status : DEFAULTS.PAYMENT_STATUS,\r\n                duration : DEFAULTS.DURATION\r\n            };\r\n\r\n            work_entries = work_entries;\r\n            store = work_entries;\r\n            store = store;\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            fireEvent(EVENTS.CLOSE_POPUP,'NEW_ENTRY');\r\n        })\r\n        .catch(err => {\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        });\r\n    }\r\n\r\n    const updateComponent = () => {\r\n        if(!selected_component.component_name){\r\n            component_fields.component_name = false;\r\n            return;\r\n        }else{\r\n            component_fields.component_name = true;\r\n        }\r\n        if(!selected_component.component_date){\r\n            component_fields.component_date = false;\r\n            return;\r\n        }else{\r\n            component_fields.component_date = true;\r\n        }\r\n\r\n        if(selected_component.component_type === \"Omniscript\" || selected_component.component_type === \"Integration Procedure\" || selected_component.component_type === \"Flow\"){\r\n            if(!selected_component.component_version){\r\n                component_fields.component_version = false;\r\n                return;\r\n            }else{\r\n                component_fields.component_version = true;\r\n            }\r\n        }else{\r\n            component_fields.component_version = true;\r\n        }\r\n\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n        updateComponentCallout(\r\n            AUTH.currentUser.uid,\r\n            selected_component.component_id,\r\n            selected_component.component_name,\r\n            JSON.stringify({\r\n                type : selected_component.component_type,\r\n                version : selected_component.component_version,\r\n                parent_component : selected_component.component_parent_name,\r\n                date : selected_component.component_date\r\n            })\r\n        )\r\n        .then(res => {\r\n            selected_component = selected_component;\r\n            backup_selected_component = JSON.parse(JSON.stringify(selected_component));\r\n\r\n            const selected_component_index = selected_list.list_components.findIndex(component => component.component_id === selected_component.component_id);\r\n            selected_list.list_components.splice(selected_component_index,1,selected_component);\r\n            \r\n            selected_list = selected_list;\r\n\r\n            const selected_list_index = store.findIndex(list => list.list_id === selected_list.list_id);\r\n            store.splice(selected_list_index,1,selected_list);\r\n            \r\n            store = store;\r\n\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            fireEvent(EVENTS.CLOSE_POPUP,'EDIT_COMPONENT');\r\n        })\r\n        .catch(err => {\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        });\r\n    }\r\n\r\n    const processDeleteEntry = (entry_id) => {\r\n        let sure = window.confirm(`Are you sure you want to delete the entry?`) ;\r\n        if(!sure) return;\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n        deleteTimeEntry(entry_id)\r\n        .then(res => {\r\n            for(let i=0;i<work_entries.length;i++){\r\n                if(work_entries[i]._id === entry_id){\r\n                    work_entries.splice(i,1);\r\n                    break;\r\n                }\r\n            }\r\n            work_entries = work_entries;\r\n            store = work_entries;\r\n            store = store;\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        })\r\n        .catch(err => {\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        });\r\n    }\r\n\r\n    onMount( () => {\r\n        \r\n        registerListener(EVENTS.SELECT_CLIENT,processSelectClientEvent);\r\n        registerListener(EVENTS.OPEN_NEW_CLIENT_POPUP,processOpenNewClientPopup);\r\n\r\n        registerListener(EVENTS.OPEN_NEW_ENTRY_POPUP,processOpenEntryPopup);\r\n        registerListener(EVENTS.OPEN_EDIT_ENTRY_POPUP,processEditEntryPopup);\r\n        registerListener(EVENTS.UPDATE_ENTRY_STATUS,processUpdateEntryStatus);\r\n        registerListener(EVENTS.DELETE_ENTRY,processDeleteEntry);\r\n\r\n        registerListener(EVENTS.CLOSE_POPUP,processClosePopup);\r\n        \r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n\r\n        getUserDataCallout()\r\n        .then(res => {\r\n            if(res && res && res.length){\r\n                store = res;\r\n                console.log(store);\r\n                for(let i=0;i<store.length;i++){\r\n                    clients.add(\r\n                        store[i].client\r\n                    );\r\n                }\r\n                clients = [...clients];\r\n                store = store;\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            }else{\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            }\r\n        })\r\n        .catch(err => {\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        })\r\n    });\r\n\r\n    onDestroy( () => {\r\n        unregisterListener(EVENTS.SELECT_CLIENT,processSelectClientEvent);\r\n        unregisterListener(EVENTS.OPEN_NEW_CLIENT_POPUP,processOpenNewClientPopup);\r\n\r\n        unregisterListener(EVENTS.OPEN_NEW_ENTRY_POPUP,processOpenEntryPopup);\r\n        unregisterListener(EVENTS.OPEN_EDIT_ENTRY_POPUP,processEditEntryPopup);\r\n        unregisterListener(EVENTS.UPDATE_ENTRY_STATUS,processUpdateEntryStatus);\r\n        unregisterListener(EVENTS.DELETE_ENTRY,processDeleteEntry);\r\n\r\n        unregisterListener(EVENTS.CLOSE_POPUP,processClosePopup);\r\n    })\r\n</script>\r\n\r\n<div class=\"app-container flex align-center flex-column\">\r\n    <Sidebar {clients} {selected_client}/>\r\n    {#if selected_client}\r\n        <Container {selected_client} {work_entries}/>\r\n    {/if}\r\n</div>\r\n\r\n{#if POPUP.NEW_CLIENT}\r\n    <Popup header=\"New Client\" _popup_name=\"NEW_CLIENT\" OnSave={saveNewClient}>\r\n        <div class=\"flex flex-column justify-center\">\r\n            <div class=\"flex form-row\">\r\n                <div class=\"flex flex-column form-column grow\">\r\n                    <Input label_class={client_fields.name ? '' : 'has-error'} data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {client_fields.name ? '' : 'has-error'}\" value={new_client.name} onChange={handleNewClientChange} data_field=\"name\" Required/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Popup>\r\n{/if}\r\n\r\n\r\n{#if POPUP.NEW_ENTRY}\r\n    <Popup header=\"New Time Entry\" _popup_name=\"NEW_ENTRY\" OnSave={saveNewEntry}>\r\n        <div class=\"flex flex-column justify-center\">\r\n            <div class=\"flex form-row\">\r\n                <div class=\"flex flex-column form-column grow\">\r\n                    <Input label_class={entry_fields.start_date ? '' : 'has-error'} data_type=\"field\" label=\"Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {entry_fields.start_date ? '' : 'has-error'}\" value={new_entry.start_date} onChange={handleNewEntryChange} data_field=\"start_date\" Required/>\r\n                </div>\r\n                \r\n                <div class=\"flex flex-column form-column grow\">\r\n                    <Input data_type=\"field\" label=\"Payment Status\" hasLabel width_class=\"width-full\" type=\"select\" classes=\"bg-transparent {getEntryPaymentStatusClass(new_entry.payment_status)}\" value={new_entry.payment_status} onChange={handleNewEntryChange} data_field=\"payment_status\" options={PAYMENT_STATUS} Required/>\r\n                </div>\r\n            </div>\r\n            <div class=\"flex form-row\">\r\n                <div class=\"flex flex-column form-column grow\">\r\n                    <Input label_class={entry_fields.start_time ? '' : 'has-error'} data_type=\"field\" label=\"Start Time\" hasLabel width_class=\"width-full\" type=\"time\" classes=\"bg-transparent {entry_fields.start_time ? '' : 'has-error'}\" value={new_entry.start_time} onChange={handleNewEntryChange} data_field=\"start_time\" Required/>\r\n                </div>\r\n\r\n                <div class=\"flex flex-column form-column grow\">\r\n                    <Input data_type=\"field\" label=\"Duration\" hasLabel width_class=\"width-full\" type=\"select\" classes=\"bg-transparent\" value={new_entry.duration} onChange={handleNewEntryChange} data_field=\"duration\" options={ENTRY_DURATIONS} Required />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Popup>\r\n{/if}\r\n\r\n{#if POPUP.EDIT_COMPONENT}\r\n    <Popup header=\"Edit Component\" _popup_name=\"EDIT_COMPONENT\" OnSave={updateComponent}>\r\n        <div class=\"flex flex-column justify-center\">\r\n\r\n            <div class=\"flex form-row\">\r\n                <div class=\"flex flex-column form-column grow\">\r\n                    <Input label_class={component_fields.component_name ? '' : 'has-error'} data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {component_fields.component_name ? '' : 'has-error'}\" value={selected_component.component_name} onChange={handleExistingComponentChange} data_field=\"component_name\" Required/>\r\n                </div>\r\n                <div class=\"flex flex-column form-column grow\">\r\n                    <Input data_type=\"field\" label=\"Type\" hasLabel width_class=\"width-full\" type=\"select\" classes=\"bg-transparent {getEntryPaymentStatusClass(selected_component.component_type)}\" value={selected_component.component_type} onChange={handleExistingComponentChange} data_field=\"component_type\" options={COMPONENT_TYPE_LIST} Required/>\r\n                </div>\r\n                \r\n            </div>\r\n            <div class=\"flex form-row\">\r\n\r\n                <div class=\"flex flex-column form-column grow\">\r\n                    <Input label_class={component_fields.component_date ? '' : 'has-error'} data_type=\"field\" label=\"Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {component_fields.component_date ? '' : 'has-error'}\" value={selected_component.component_date} onChange={handleExistingComponentChange} data_field=\"component_date\" Required/>\r\n                </div>\r\n                <div class=\"flex flex-column form-column grow\">\r\n                    <Input label_class={component_fields.component_version ? '' : 'has-error'} data_type=\"field\" label=\"Version\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {component_fields.component_version ? '' : 'has-error'}\" value={selected_component.component_version} onChange={handleExistingComponentChange} data_field=\"component_version\" Required={selected_component.component_type === \"Omniscript\" || selected_component.component_type === \"Integration Procedure\" || selected_component.component_type === \"Flow\"}/>\r\n                </div>\r\n                \r\n            </div>\r\n            <div class=\"flex form-row\">\r\n                <div class=\"flex flex-column form-column grow\">\r\n                    <Input data_type=\"field\" label=\"Parent Component (if any)\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent\" value={selected_component.component_parent_name} onChange={handleExistingComponentChange} data_field=\"component_parent_name\" />\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </Popup>\r\n{/if}\r\n\r\n\r\n<style>\r\n\r\n    .app-container{\r\n        margin:0;\r\n        padding: 0;\r\n        height: 100vh;\r\n    }\r\n\r\n    .form-row{\r\n        padding: 1rem 0;\r\n    }\r\n\r\n    .form-column{\r\n        padding: 0 1rem;\r\n        width: 50%;\r\n    }\r\n\r\n</style>","<script>\r\n    export let show;\r\n</script>\r\n\r\n{#if show}\r\n    <div class=\"main-container flex align-center flex-column justify-center bg-transparent\">\r\n        <div class=\"flex align-center text-primary\">\r\n            <img class=\"logo\" src=\"./logo.svg\" alt=\"oneList\"/>\r\n        </div>\r\n    </div>\r\n{/if}\r\n\r\n\r\n<style>\r\n    \r\n    .logo {\r\n        width: 8em;\r\n        height: 8em;\r\n    }\r\n\r\n    .main-container{\r\n        margin:0;\r\n        padding: 0;\r\n        height: 100vh;\r\n    }\r\n\r\n</style>","<script>\r\n    export let show = true;\r\n</script>\r\n\r\n{#if show}\r\n    <div class=\"spinner-container flex justify-center align-center fixed flex-column\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"red\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: rgb(241, 242, 243 / 0%); display: block;\" width=\"100px\" height=\"100px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <circle cx=\"50\" cy=\"50\" r=\"16\" stroke-width=\"4\" stroke=\"#7367f0\" stroke-dasharray=\"50.26548245743669 50.26548245743669\" fill=\"none\" stroke-linecap=\"round\">\r\n              <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" dur=\"1s\" keyTimes=\"0;1\" values=\"0 50 50;360 50 50\"></animateTransform>\r\n            </circle>\r\n        </svg>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .spinner-container{\r\n        z-index: 10;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n</style>","<script>\r\n\timport { AUTH } from \"./firebase\";\r\n\timport LoginPage from \"./Pages/LoginPage.svelte\";\r\n\timport AppPage from \"./Pages/AppPage.svelte\";\r\n\timport LoadSpinner from \"./utility/LoadSpinner.svelte\";\r\n\timport ProcessSpinner from \"./utility/ProcessSpinner.svelte\";\r\n    import {registerListener , unregisterListener, fireEvent, EVENTS} from './EventManager';\r\n\timport { onDestroy, onMount } from \"svelte\";\r\n\r\n\tlet currentUser;\r\n\tlet isProcessing = false;\r\n\tlet showInitLoad = true;\r\n\tlet view;\r\n\tlet all_tasks = [];\r\n\tlet all_components = [];\r\n\r\n\tconst showSpinner = () =>  {\r\n    \tisProcessing = true;\r\n\t\tisProcessing = isProcessing;\r\n\t}\r\n\r\n\tconst hideSpinner = () =>  {\r\n    \tisProcessing = false;\r\n\t\tisProcessing = isProcessing;\r\n\t}\r\n\r\n\tAUTH.onAuthStateChanged((user) => {\r\n\t\tif (user && user.uid) {\r\n\t\t\tcurrentUser = user;\r\n\t\t} else {\r\n\t\t\tcurrentUser = null;\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tshowInitLoad = false;\r\n\t\t}, 500);\r\n\t});\r\n\r\n\tconst getViewType = () => {\r\n\t\tif(!window.localStorage.getItem('WORKLIST')){\r\n\t\t\tlet WORKLIST = {\r\n\t\t\t\tview : \"LISTS\"\r\n\t\t\t}\r\n\t\t\twindow.localStorage.setItem('WORKLIST',JSON.stringify(WORKLIST));\r\n\t\t}\r\n\r\n\t\tlet WORKLIST = JSON.parse(window.localStorage.getItem('WORKLIST'));\r\n\t\treturn WORKLIST.view;\r\n\t}\r\n\r\n\tconst getNewViewData = (_view) => {\r\n\t\tfireEvent(EVENTS.GET_VIEW_DATA,{\r\n\t\t\tnew_view : _view,\r\n\t\t\tcurrent_view : view\r\n\t\t});\r\n\t}\r\n\r\n\tconst changeView = (_data) => {\r\n\t\tif(_data.view === \"ALLTASKS\"){\r\n\t\t\tall_tasks = _data.data;\r\n\t\t\tall_components = [];\r\n\t\t}else if(_data.view === \"ALLCOMPONENTS\"){\r\n\t\t\tall_tasks = [];\r\n\t\t\tall_components = _data.data;\r\n\t\t}\r\n\t\tview = _data.view;\r\n\t}\r\n\r\n\tonMount(() => {\r\n\t\tregisterListener(EVENTS.SHOW_SPINNER,showSpinner);\r\n\t\tregisterListener(EVENTS.HIDE_SPINNER,hideSpinner);\r\n\t\tregisterListener(EVENTS.SELECT_VIEW,getNewViewData);\r\n\t\tregisterListener(EVENTS.SEND_VIEW_DATA,changeView);\r\n\t\tview = getViewType();\r\n\t});\r\n\r\n\tonDestroy ( () => {\r\n\t\tunregisterListener(EVENTS.SHOW_SPINNER,showSpinner);\r\n\t\tunregisterListener(EVENTS.HIDE_SPINNER,hideSpinner);\r\n\t\t/* **** */\r\n\t\t// unregisterListener(EVENTS.SELECT_VIEW,getNewViewData);\r\n\t\t// unregisterListener(EVENTS.SEND_VIEW_DATA,changeView);\r\n\t})\r\n\r\n</script>\r\n\r\n<main>\r\n\t<ProcessSpinner show={isProcessing}/>\r\n\t<LoadSpinner show={showInitLoad}/>\r\n\t\r\n\t{#if !showInitLoad}\r\n\t\t{#if currentUser}\r\n\t\t\t<AppPage/>\r\n\t\t\t{:else}\r\n\t\t\t<LoginPage />\r\n\t\t{/if}\r\n\t{/if}\r\n</main>\r\n","import App from './App.svelte';\r\nconst app = new App({\r\n\ttarget: document.body,\r\n});\r\n\r\nexport default app;"],"names":["noop","add_location","element","file","line","column","char","__svelte_meta","loc","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","null_to_empty","value","detach","node","parentNode","removeChild","destroy_each","iterations","detaching","d","name","svg_element","createElementNS","text","data","createTextNode","space","empty","set_style","key","important","style","setProperty","select_option","select","options","option","__value","selected","selectedIndex","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","create_component","mount_component","target","anchor","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","dispatch_dev","type","detail","dispatchEvent","bubbles","e","createEvent","initCustomEvent","custom_event","version","append_dev","appendChild","append","insert_dev","insertBefore","insert","detach_dev","listen_dev","event","handler","has_prevent_default","has_stop_propagation","modifiers","keys","dispose","addEventListener","removeEventListener","listen","attr_dev","attribute","removeAttribute","getAttribute","setAttribute","attr","prop_dev","property","set_data_dev","wholeText","validate_each_argument","arg","msg","Symbol","iterator","validate_slots","slot_key","indexOf","console","warn","SvelteComponentDev","$destroy","this","$on","index","splice","$set","$$props","obj","$$set","constructor","$$inline","super","$capture_state","$inject_state","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","freeze","firebase","initializeApp","signinUser","email","password","auth","signInWithEmailAndPassword","signoutUser","signOut","AUTH","events","EVENTS","SHOW_SPINNER","HIDE_SPINNER","SELECT_CLIENT","OPEN_NEW_CLIENT_POPUP","DELETE_CLIENT","OPEN_NEW_ENTRY_POPUP","OPEN_VIEW_ENTRY_POPUP","OPEN_EDIT_ENTRY_POPUP","UPDATE_ENTRY_STATUS","DELETE_ENTRY","CLOSE_POPUP","registerListener","eventName","find","listener","error","unregisterListener","cb","fireEvent","payload","call","label","onClick","hasLabel","placeholder","onChange","onKeyUp","width_class","label_class","classes","data_field","data_type","readOnly","Required","user","handleChange","onSignIn","res","catch","err","API","BASE_ENDPOINT","ENDPOINTS","getUserData","getUserGeneralTasks","createList","updateList","deleteList","createTask","updateTask","deleteTask","createGeneralTask","updateGeneralTask","deleteGeneralTask","deleteBulkGeneralTask","createComponent","updateComponent","deleteComponent","exportListComponents","MONTH","DEFAULTS","PAYMENT_STATUS","DURATION","ENTRY_DURATIONS","ENTRY_COLUMN","show_in_list","show_in_detail","show_header","allow_inline_edit","field_type","getEntryPaymentStatusClass","_type","replace","formatDateString","_dateString","dateArr","split","convertDateToString","_date","year","getFullYear","month","getMonth","date","getDate","convertDateToTimeString","hour","getHours","minute","getMinutes","second","getSeconds","formatTimeString","_TimeString","timeArr","_hour","Number","isAMPM","getUserDataCallout","fetch","headers","json","createTimeEntry","_entry","method","body","JSON","stringify","deleteTimeEntry","entry_id","updateEntryStatus","entry","_id","payment_status","exportListComponentsCallout","user_id","file_name","blob","header","OnSave","showSave","showActions","saveLabel","_popup_name","fireClosePopupEvent","OnClose","clients","selected_client","sendSelectClientEvent","evt","currentTarget","dataset","sendNewClientEvent","OnClick","includes","start_date","start_time","duration","actions","sendOpenComponentDetailEvent","sendChangeStatusEvent","sendDeleteComponentDetailEvent","sendViewComponentDetailEvent","work_entries","sendNewEntryEvent","log","exportTimeEntries","Date","toISOString","component_fields","component_name","selected_component","component_type","COMPONENT_TYPE_LIST","component_date","component_version","component_parent_name","NEW_CLIENT","NEW_ENTRY","EDIT_COMPONENT","store","POPUP","EDIT_ENTRY","processClosePopup","_popup","backup_selected_client","new_client","information","client_fields","handleNewClientChange","field","processOpenNewClientPopup","processSelectClientEvent","client_name","client","saveNewClient","processEntryList","confirm","deleteListCallout","currentUser","uid","selected_list","list_id","lists","backup_selected_list","selected_entry","backup_selected_entry","new_entry","entry_fields","handleNewEntryChange","handleExistingComponentChange","processOpenEntryPopup","processEditEntryPopup","parse","processUpdateEntryStatus","saveNewEntry","updateComponentCallout","component_id","backup_selected_component","selected_component_index","list_components","findIndex","selected_list_index","list","processDeleteEntry","show","view","isProcessing","showInitLoad","all_tasks","all_components","showSpinner","hideSpinner","onAuthStateChanged","setTimeout","getViewType","localStorage","getItem","WORKLIST","setItem","getNewViewData","_view","GET_VIEW_DATA","new_view","current_view","changeView","_data","SELECT_VIEW","SEND_VIEW_DATA"],"mappings":"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"}